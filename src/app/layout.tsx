import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";
import { connectMongoDB, Script } from '@/lib/models';
import { ScriptLoader } from '@/components/ScriptLoader';
import { headers } from 'next/headers';
import { autoSetupAdmin } from '@/lib/autoSetup';

const inter = Inter({
  subsets: ["latin"],
  variable: "--font-inter",
  display: "swap",
});

export const metadata: Metadata = {
  title: "çekiliş fırsatları",
  description: "Generated by create next app",
};

async function getScripts() {
  try {
    await connectMongoDB();
    const scripts = await Script.find({ isActive: true });
    return scripts || [];
  } catch (error) {
    console.error('Script yükleme hatası:', error);
    return [];
  }
}

async function setupAdminIfNeeded() {
  try {
    if (process.env.AUTO_SETUP === 'true') {
      await autoSetupAdmin();
    }
  } catch (error) {
    console.error('Admin kurulum hatası:', error);
  }
}

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const scripts = await getScripts();
  
  setupAdminIfNeeded();
  
  const headScripts = scripts.filter(script => script.placement === 'head');
  const bodyScripts = scripts.filter(script => script.placement === 'body');
  
  return (
    <html lang="en">
      <head>
        <ScriptLoader scripts={headScripts} />
      </head>
      <body className={`${inter.variable} antialiased`}>
        {children}
        
        <ScriptLoader scripts={bodyScripts} />
      </body>
    </html>
  );
}
